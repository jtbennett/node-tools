name: Build

on:
  push:
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-v1-

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Test
        run: yarn test:all

      - name: Build
        run: |
          yarn clean:all
          yarn build:all

      - name: Lint
        run: yarn lint:all

      # -------------------------------------------------------------------------
      # To automate publishing of your packages to npm:
      #
      # - Add a secret to your github repo named NPM_TOKEN with a valid token for
      #   publishing to NPM.
      #
      # - Remove "private: true" from the package.json files of the packages you
      #   wish to publish. Fill out other metadata fields.
      #
      # - Uncomment the "Set publish version from tag" and "Publish" steps below.
      # - Remove the line "--access public" below if your package will be private.
      # - Replace the "__PACKAGE_X__" placeholders below with the name(s) of
      #   the packages you want to publish. (Include the @scope, if any.)
      #
      # - When you have a version you want to publish, tag the commit in git
      #   with a value starting with 'v', followed by the version number.
      #       git tag v1.2.3
      # - Push that tag to your github repo:
      #       git push --tags
      #
      # If your build succeeds, the packages will be published to npm!
      # The version number in your package.json files will not be updated in
      # source control. (Coming soon...)
      # -------------------------------------------------------------------------

      # - name: Set publish version from tag
      #   id: version
      #   if: ${{ startsWith(github.ref, 'refs/tags/v') }}
      #   run: |
      #     echo ::set-output name=VERSION::$(echo '${{ github.ref }}' | cut -c 12-)

      # - name: Publish
      #   if: ${{ startsWith(github.ref, 'refs/tags/v') }}
      #   env:
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      #   run: |
      #     yarn tsp publish \
      #       --access public \
      #       --set-version ${{ steps.version.outputs.VERSION }} \
      #       __PACKAGE_X__ \
      #       __PACKAGE_X__ \
      #       __PACKAGE_X__
